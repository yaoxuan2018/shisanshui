from tkinter import *
from tkinter import ttk

import requests
import json
class Initial_interface():#初始界面
    def __init__(self,master):
        self.root = master
        self.root.title("初始界面")
        width = 1080
        height = 608
        screenwidth = self.root.winfo_screenwidth()
        screenheight = self.root.winfo_screenheight()
        alignstr = '%dx%d+%d+%d' % (width, height, (screenwidth - width)/2, (screenheight - height)/2)
        self.root.geometry(alignstr)
        b1=Button(self.root, text="注册",bg="#E6E6FA",font=("华文行楷", 65),relief="flat",command=self.click1).place(x=75, y=139, width=303, height=94)
        Button(self.root, text="登陆",bg="#E6E6FA",relief="flat",font=("华文行楷", 65),command=self.click2).place(x=648, y=365, width=303, height=94)
    def click1(self):
        self.root.destroy()
        root2 = Tk()
        photo = PhotoImage(file="./llg.gif")
        Label(root2, image=photo).place(x=0, y=0, width=1080, height=608)  # 把图片整合到标签类中
        Registration_Interface(root2)
    def click2(self):
        self.root.destroy()
        root2 = Tk()
        photo = PhotoImage(file="./llg.gif")
        Label(root2, image=photo).place(x=0, y=0, width=1080, height=608)  # 把图片整合到标签类中
        landing_Interface(root2)
class landing_Interface():#登陆
    def __init__(self, master):
        self.root = master
        self.root.title("登录界面")
        self.root.geometry('1080x608')
        v1 = StringVar()
        v2 = StringVar()
        self.e1 = Entry(self.root,font="Helvetica 40 bold", textvariable=v1)
        self.e1.place(x=163, y=73, width=315, height=65)
        self.e2 = Entry(self.root, font="Helvetica 40 bold",textvariable=v2)
        self.e2.place(x=163, y=162, width=315, height=65)
        Label(self.root, text="账户", font=("华文行楷", 33),relief="flat",bg="#ffffff").place(x=53, y=75, width=80, height=62)
        Label(self.root, text="密码", font=("华文行楷", 33),relief="flat",bg="#ffffff").place(x=53, y=166, width=80, height=62)
        Button(self.root, text="登录", font=("华文行楷", 40),relief="flat",bg="#ffffff",command=self.click1).place(x=57, y=309, width=153, height=74)
        Button(self.root, text="返回", font=("华文行楷", 40), relief="flat", bg="#ffffff", command=self.callback).place(x=346,y=306,width=153,height=74)
        self.root.mainloop()
    def callback(self):
        self.root.destroy()
        root = Tk()
        photo = PhotoImage(file="./D.gif")
        Label(root, image=photo).place(x=0, y=0, width=1080, height=608)  # 把图片整合到标签类中
        Initial_interface(root)
        root.mainloop()
    def click1(self):
        url = 'http://api.revth.com/auth/login'
        form_data = {
            "username": self.e1.get(),
            "password": self.e2.get(),
        }
        headers = {
            "Content-Type": "application/json",
        }
        response = requests.post(url=url, headers=headers, data=json.dumps(form_data), verify=False)
        x=response.json()
        m=x['status']
        if(m==0):
            n = x['data']['token']
            user_id=x['data']['user_id']
            self.root.destroy()
            root = Tk()
            photo = PhotoImage(file="./l.gif")
            Label(root, image=photo).place(x=0, y=0, width=1080, height=608)  # 把图片整合到标签类中
            menu_interface(root,n,user_id)
        else:
            tl=Toplevel()
            photo1 = PhotoImage(file="./vd.gif")
            tl.geometry('400x400')
            tl.title("警告")
            l1=Label(tl, image=photo1).place(x=0, y=0, width=400, height=400)  # 把图片整合到标签类中
            l1.photo = photo1
class Registration_Interface():#注册界面
    def __init__(self, master):
        self.root = master
        self.root.title("注册界面")
        self.root.geometry('1080x608')
        v1 = StringVar()
        v2 = StringVar()
        self.e1 = Entry(self.root,font="Helvetica 40 bold", textvariable=v1)
        self.e1.place(x=163, y=73, width=315, height=65)
        self.e2 = Entry(self.root,font="Helvetica 40 bold", textvariable=v2, show="*")
        self.e2.place(x=163, y=162, width=315, height=65)
        Label(self.root, text="账户",font=("华文行楷", 33),relief="flat",bg="#ffffff").place(x=53, y=75, width=80, height=62)
        Label(self.root, text="密码",font=("华文行楷", 33),relief="flat",bg="#ffffff").place(x=53, y=166, width=80, height=62)
        Button(self.root, text="注册",font=("华文行楷", 40),relief="flat",bg="#ffffff",command=self.click1).place(x=57, y=309, width=153, height=74)
        Button(self.root, text="返回", font=("华文行楷", 40), relief="flat", bg="#ffffff", command=self.callback).place(x=346,y=306,width=153,height=74)
        self.root.mainloop()
    def callback(self):
        self.root.destroy()
        root = Tk()
        photo = PhotoImage(file="./D.gif")
        Label(root, image=photo).place(x=0, y=0, width=1080, height=608)  # 把图片整合到标签类中
        Initial_interface(root)
        root.mainloop()
    def click1(self):
        usename=self.e1.get()
        password=self.e2.get()
        self.root.destroy()
        root=Tk()
        photo = PhotoImage(file="./llg.gif")
        Label(root, image=photo).place(x=0, y=0, width=1080, height=608)  # 把图片整合到标签类中
        Registration_validation_Interface(root,usename,password)
class Registration_validation_Interface():#注册+验证界面
    def __init__(self, master,usename,password):
        self.root = master
        self.root.title("学号验证")
        width = 1080
        height = 608
        screenwidth = self.root.winfo_screenwidth()
        screenheight = self.root.winfo_screenheight()
        alignstr = '%dx%d+%d+%d' % (width, height, (screenwidth - width) / 2, (screenheight - height) / 2)
        self.root.geometry(alignstr)
        self.username=usename
        self.password=password
        v1 = StringVar()
        v2 = StringVar()
        self.e1 = Entry(self.root,font="Helvetica 40 bold", textvariable=v1)
        self.e1.place(x=163, y=73, width=315, height=65)
        self.e2 = Entry(self.root, font="Helvetica 40 bold",textvariable=v2, show="*")
        self.e2.place(x=163, y=162, width=315, height=65)
        Label(self.root, text="学号",font=("华文行楷", 33),relief="flat",bg="#ffffff").place(x=53, y=75, width=80, height=62)
        Label(self.root, text="密码",font=("华文行楷", 33),relief="flat",bg="#ffffff").place(x=53, y=166, width=80, height=62)
        Button(self.root, text="验证",font=("华文行楷", 40),relief="flat",bg="#ffffff",command=self.click1).place(x=57, y=309, width=153, height=74)
        Button(self.root, text="返回", font=("华文行楷", 40), relief="flat", bg="#ffffff", command=self.callback).place(x=346,y=306,width=153,height=74)
        self.root.mainloop()
    def callback(self):
        self.root.destroy()
        root2 = Tk()
        photo = PhotoImage(file="./llg.gif")
        Label(root2, image=photo).place(x=0, y=0, width=1080, height=608)  # 把图片整合到标签类中
        landing_Interface(root2)
    def click1(self):
        url = 'http://www.revth.com:12300/auth/register2'
        form_data = {
            "username":self.username,
            "password":self.password,
            "student_number": self.e1.get(),
            "student_password": self.e2.get()
        }
        headers = {
            "Content-Type": 'application/json',
        }
        response = requests.post(url=url, headers=headers, data=json.dumps(form_data), verify=False)
        self.root.destroy()
        root2 = Tk()
        photo = PhotoImage(file="./llg.gif")
        Label(root2, image=photo).place(x=0, y=0, width=1080, height=608)  # 把图片整合到标签类中
        landing_Interface(root2)
class menu_interface():  # 菜单界面
    def __init__(self, master,n,user_id):
        self.root = master
        self.root.title("菜单")
        self.token=n
        self.user_id=user_id
        width = 1080
        height = 607
        screenwidth = self.root.winfo_screenwidth()
        screenheight = self.root.winfo_screenheight()
        alignstr = '%dx%d+%d+%d' % (width, height, (screenwidth - width) / 2, (screenheight - height) / 2)
        self.root.geometry(alignstr)
        Button(self.root, text="开启战局",font=("华文行楷", 45),relief="flat", command=self.click1,bg="#ffffff").place(x=46, y=60, width=239, height=61)
        Button(self.root, text="排行榜",font=("华文行楷", 45), relief="flat",command=self.click2,bg="#ffffff").place(x=46, y=184, width=239, height=61)
        Button(self.root, text="历史战局列表",font=("华文行楷", 30), relief="flat",command=self.click3,bg="#ffffff").place(x=46, y=303, width=239, height=61)
        Button(self.root, text="历史战局详情",font=("华文行楷", 30),relief="flat", command=self.click4,bg="#ffffff").place(x=46, y=422, width=239, height=61)
        Button(self.root, text="退出",font=("华文行楷", 45), relief="flat",command=self.click5,bg="#ffffff").place(x=907, y=386, width=143, height=84)
        self.root.mainloop()
    def click1(self):#开启战局
        token=self.token
        user_id=self.user_id
        self.root.destroy()
        url='http://api.revth.com/game/open'
        headers={
            "X-Auth-Token": self.token,
        }
        response = requests.post(url=url, headers=headers)
        x=response.json()
        id = x['data']['id']
        card=x['data']['card']
        root = Tk()
        photo = PhotoImage(file="./mm.gif")
        Label(root, image=photo).place(x=0, y=0, width=1061, height=602 ) # 把图片整合到标签类中
        warStart(root,token,id,card,user_id)
    def click2(self):
        w = Tk()
        w.title("排行榜")
        scrollBar = Scrollbar(w)
        scrollBar.pack(side=RIGHT, fill=Y)
        tree = ttk.Treeview(w, yscrollcommand=scrollBar.set,show="headings")
        scrollBar.config(command=tree.yview)
        def treeviewClick(event):
            tree.bind('<Button-1>', treeviewClick)
        tree.bind('<Button-1>', treeviewClick)
        tree["columns"] = ("player_id", "score", "name")
        tree.column("player_id", width=100, anchor='center')  # 表示列,不显示
        tree.column("score", width=100, anchor='center')
        tree.column("name", width=100, anchor='center')
        tree.heading("player_id", text="player_id")  # 显示表头
        tree.heading("score", text="score")
        tree.heading("name", text="name")
        response = requests.get('http://api.revth.com/rank')
        x = response.json()
        n = 0
        h = 0
        for i in x:
            m = 0
            for j in i.values():
                if (m == 0):
                    a = str(j)
                elif (m == 1):
                    b = str(j)
                else:
                    c = str(j)
                m = m + 1
                n = n + 1
            tree.insert("", int(h), text="end", values=(a, b, c))
            h = h + 1
        tree.pack()
    def click3(self):#历史战局列表
        w = Tk()
        w.title("历史战局列表")
        scrollBar = Scrollbar(w)
        scrollBar.pack(side=RIGHT, fill=Y)
        tree = ttk.Treeview(w, yscrollcommand=scrollBar.set)
        scrollBar.config(command=tree.yview)
        def treeviewClick(event):
            tree.bind('<Button-1>', treeviewClick)
        tree.bind('<Button-1>', treeviewClick)
        tree["columns"] = ("id", "card", "score")
        tree.column("id", width=100, anchor='center')  # 表示列,不显示
        tree.column("card", width=400, anchor='center')
        tree.column("score", width=100, anchor='center')
        tree.heading("id", text="id")  # 显示表头
        tree.heading("card", text="card")
        tree.heading("score", text="score")
        page=0
        url= "http://api.revth.com/history?player_id="+ str(self.user_id)+"&limit=50&page="+ str(page)
        headers={
    "X-Auth-Token":self.token
         }
        response = requests.get(url=url,headers=headers)
        x=response.json()
        x=x["data"]
        n = 0
        h = 0
        for i in x:
            m = 0
            for j in i.values():
                if (m == 0):
                    id = str(j)
                elif (m == 1):
                    card =str(j)
                elif(m==2):
                    score = str(j)
                else :timestamp=str(j)
                m = m + 1
                n = n + 1
            tree.insert("", int(h), text=timestamp, values=(id, card, score))
            h = h + 1
        tree.pack()
    def click4(self):#历史战局详情
        user_id = self.user_id
        token = self.token
        self.root.destroy()
        root = Tk()
        photo = PhotoImage(file="./hzf.gif")
        Label(root, image=photo).place(x=0, y=0, width=1080, height=608)  # 把图片整合到标签类中
        choose_interface(root, token, user_id)
    def click5(self):
        self.root.destroy()
        url="http://api.revth.com/auth/logout"
        headers = {
            "X-Auth-Token":self.token,
        }
        response = requests.post(url=url,headers=headers)
        root = Tk()
        photo = PhotoImage(file="./D.gif")
        Label(root, image=photo).place(x=0, y=0, width=1080, height=608)  # 把图片整合到标签类中
        Initial_interface(root)
        root.mainloop()
class  warStart():#开启战局
    def __init__(self, master,n,id,card,user_id):
        self.token=n
        self.user_id=user_id
        self.id=id
        self.card=card
        self.root = master
        width = 1061
        height = 602
        screenwidth = self.root.winfo_screenwidth()
        screenheight = self.root.winfo_screenheight()
        alignstr = '%dx%d+%d+%d' % (width, height, (screenwidth - width) / 2, (screenheight - height) / 2)
        self.root.geometry(alignstr)
        Label(self.root, text=str(card),font=("华文行楷", 30),bg="#eee7e1").place(x=259, y=53, width=757, height=80)
        Label(self.root, text=str(id), font=("华文行楷", 30),bg="#eee7e1").place(x=542, y=544, width=166, height=43)
        Label(self.root, text=str(card), font=("华文行楷", 15), bg="#eee7e1").place(x=793, y=173, width=165, height=57)
        Label(self.root, text=str(card), font=("华文行楷", 15), bg="#eee7e1").place(x=793, y=268, width=245, height=53)
        Label(self.root, text=str(card), font=("华文行楷", 15), bg="#eee7e1").place(x=793, y=366, width=245, height=53)
        Button(self.root, text="出牌",font=("华文行楷", 35),relief="flat", command=self.click10,bg="#ffffff").place(x=104, y=480, width=199, height=76)
        Button(self.root, text="退出",font=("华文行楷", 35),relief="flat", command=self.click8,bg="#ffffff").place(x=719, y=480, width=199, height=76)
        self.root.title("出牌")
        self.root.mainloop()
    def click8(self):#出牌
        token=self.token
        user_id=self.user_id
        self.root.destroy()
        url='http://api.revth.com/game/submit'
        form_data={
            "id": self.id,
            "card": [
                "*2 *3 *4",
                "*5 *6 *7 *8 *9",
                "*10 *J *Q *K *A"
            ]
        }
        headers={
            "X-Auth-Token": token,
            "Content-Type": "application/json"
        }
        response = requests.post(url=url, headers=headers,data=json.dumps(form_data),verify=False)
        root = Tk()
        photo = PhotoImage(file="./l.gif")
        Label(root, image=photo).place(x=0, y=0, width=1080, height=608)  # 把图片整合到标签类中
        menu_interface(root,token,user_id)
    def click10(self):#退出
        token = self.token
        user_id=self.user_id
        self.root.destroy()
        root = Tk()
        photo = PhotoImage(file="./l.gif")
        Label(root, image=photo).place(x=0, y=0, width=1080, height=608)  # 把图片整合到标签类中
        menu_interface(root,token,user_id)
class choose_interface():
    def __init__(self,master,token,user_id):
        self.root = master
        self.root.title("战局详情查询界面")
        width = 1080
        height = 608
        screenwidth = self.root.winfo_screenwidth()
        screenheight = self.root.winfo_screenheight()
        alignstr = '%dx%d+%d+%d' % (width, height, (screenwidth - width) / 2, (screenheight - height) / 2)
        self.root.geometry(alignstr)
        self.token=token
        self.user_id=user_id
        Button(self.root, text="查询",bg="#ffffff",font=("华文行楷", 40),relief="flat",command=self.clicks).place(x=111,y=232,width=129,height=58)
        Button(self.root, text="返回", bg="#ffffff", font=("华文行楷", 40), relief="flat", command=self.clickss).place(x=111,y=329,width=129,height=58)
        v2 = StringVar()
        self.e1 = Entry(self.root, font="Helvetica 30 bold", textvariable=v2)
        self.e1.place(x=48, y=116, width=307, height=76)
        self.root.mainloop()
    def clicks(self):
        w = Tk()
        w.title("历史战局详情")
        scrollBar = Scrollbar(w)
        scrollBar.pack(side=RIGHT, fill=Y)
        tree = ttk.Treeview(w, yscrollcommand=scrollBar.set, show="headings")
        scrollBar.config(command=tree.yview)
        def treeviewClick(event):
            tree.bind('<Button-1>', treeviewClick)
        tree.bind('<Button-1>', treeviewClick)
        tree["columns"] = ("roomid", "timestamp", "player_id", "name", "score", "card")
        tree.column("roomid", width=100, anchor='center')  # 表示列,不显示
        tree.column("timestamp", width=100, anchor='center')
        tree.column("player_id", width=100, anchor='center')
        tree.column("name", width=100, anchor='center')
        tree.column("score", width=100, anchor='center')
        tree.column("card", width=400, anchor='center')
        tree.heading("roomid", text="roomid")  # 显示表头
        tree.heading("timestamp", text="timestamp")
        tree.heading("player_id", text="player_id")
        tree.heading("name", text="name")
        tree.heading("score", text="score")
        tree.heading("card", text="card")
        rd = self.e1.get()
        url = "http://api.revth.com/history/" + str(rd)
        headers = {
            "X-Auth-Token": self.token
        }
        response = requests.get(url=url, headers=headers)
        x = response.json()
        x = x["data"]
        tm = x["timestamp"]
        h = 0
        for i in x["detail"]:
            player_id = i["player_id"]
            name = i["name"]
            score = i["score"]
            card = i["card"]
            tree.insert("", int(h), values=(rd, tm, player_id, name, score, card))
            h = h + 1
        tree.pack()
    def clickss(self):
        token=self.token
        user_id=self.user_id
        self.root.destroy()
        root = Tk()
        photo = PhotoImage(file="./l.gif")
        Label(root, image=photo).place(x=0, y=0, width=1080, height=608)  # 把图片整合到标签类中
        menu_interface(root, token, user_id)
if __name__ == '__main__':
    root = Tk()
    photo = PhotoImage(file="./D.gif")
    Label(root, image=photo).place(x=0, y=0, width=1080, height=608)  # 把图片整合到标签类中
    Initial_interface(root)
    root.mainloop()
